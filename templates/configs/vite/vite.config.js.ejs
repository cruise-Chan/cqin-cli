import { defineConfig } from 'vite';
import modernNormalize from 'modern-normalize/modern-normalize.css?inline'
<% if (framework === 'React') { %>
import react from '@vitejs/plugin-react';
<% } else { %>
import vue from '@vitejs/plugin-vue';
<% } %>
import path from 'path';
// ESM环境获取__dirname
import { fileURLToPath } from 'url';
const __dirname = path.dirname(fileURLToPath(import.meta.url));

export default defineConfig({
  server: {
    host: '0.0.0.0', // 监听所有地址
    port: 8080,       // 指定端口
    open: true,       // 启动后自动打开浏览器
    strictPort: false, // false端口占用则+1
  },
  plugins: [
    <% if (framework === 'React') { %>
    react()
    <% } else { %>
    vue({
      reactivityTransform: true // 启用响应性语法糖
    })
    <% } %>
  ],
  css: {
    preprocessorOptions: {
      <%_ if (cssPreprocessor === 'Sass/SCSS') { _%>
      scss: {
       additionalData: `
          @use "@/styles" as *;
          @use "sass:meta";
          @import "${modernNormalize}";
        `,
        charset: false
      }
      <%_ } else if (cssPreprocessor === 'Less') { _%>
      less: {
        globalVars: {
          hack: `true; @import "@/styles/_variables.less";`
        }
      }
      <%_ } else if (cssPreprocessor === 'Stylus') { _%>
      stylus: {
        imports: [path.resolve(__dirname, 'src/styles/_variables.styl')]
      }
      <%_ } _%>
    },
    postcss: {
      plugins: [import('postcss-preset-env')]
    },
  },
  optimizeDeps: {
    include: ['postcss-preset-env', 'cssnano']
  },
  build: {
    cssCodeSplit: true,
    minify: 'esbuild',
    rollupOptions: {
      plugins: [import('cssnano')]
    }
  },
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src')
    }
  }
});